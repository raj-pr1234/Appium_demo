<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-02T13:12:18 IST" name="Suite" finished-at="2023-02-02T13:15:44 IST" duration-ms="206243">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-02-02T13:12:18 IST" name="Test" finished-at="2023-02-02T13:15:44 IST" duration-ms="206243">
      <class name="com.APIDemos.Runner.Run">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:12:18 IST" name="setUpClass" finished-at="2023-02-02T13:12:19 IST" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1bd95764]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:12:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:12:43 IST" duration-ms="24219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the Alarm controller functions"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["user test the Alarm functionalities"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:12:43 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:13:00 IST" duration-ms="16870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the Alarm service Functions"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["user test the Alarm functionalities"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:13:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:13:17 IST" duration-ms="16619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check the chronometer start and stop"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["verify the chronometer functionalties"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:13:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:13:41 IST" duration-ms="24408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the reset functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["verify the chronometer functionalties"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:13:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:13:59 IST" duration-ms="17722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the formating functionality working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["verify the chronometer functionalties"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:13:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:14:17 IST" duration-ms="18417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify clear format functionality working"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["verify the chronometer functionalties"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:14:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:14:39 IST" duration-ms="21636" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the get corky button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Test the menu functionality of Fragment"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [(okay -1) Corky!
] but found [(okay -1) Corky!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [(okay -1) Corky!
] but found [(okay -1) Corky!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.APIDemos.stepdefinations.FragmentResultStepDef.user_verify_that_results_text_with(FragmentResultStepDef.java:59)
at âœ½.user verify that results text with "(okay -1) Corky!"(file:///C:/Users/rajkumar06/Desktop/Exit_Test/src/test/java/com/APIDemos/feature/Fragmentmenufeature.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:14:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:15:01 IST" duration-ms="21932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the sms functionality to send the sms successfully"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Test the Sms functionality on OS Api"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:15:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:15:20 IST" duration-ms="19450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the sms functionality that sms is not send"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Test the Sms functionality on OS Api"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:15:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-02T13:15:44 IST" duration-ms="24135" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["user verify the textswitcher functions"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Verify the functionalites of TextSwitcherPage"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: Cannot find the element by swiping upnot found (tried for 5 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: Cannot find the element by swiping upnot found (tried for 5 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
at com.APIDemos.utilities.Utility.waitForElamentPresent(Utility.java:141)
at com.APIDemos.utilities.Utility.swiUPTillFindElement(Utility.java:127)
at com.APIDemos.Pages.TextSwitcherPage.do_tap_on_text_switcher(TextSwitcherPage.java:41)
at com.APIDemos.stepdefinations.TextSwitcherStepDef.user_tap_on_textswitcher_tap(TextSwitcherStepDef.java:31)
at âœ½.user tap on textswitcher tap(file:///C:/Users/rajkumar06/Desktop/Exit_Test/src/test/java/com/APIDemos/feature/Textswitcherfeature.feature:7)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.xpath: //android.widget.TextView[@text = 'TextSwitcher']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'IN-3KKJ1J3', ip: '192.168.1.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.5'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
at java.base/java.util.Optional.orElseThrow(Optional.java:408)
at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:183)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:180)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
at com.APIDemos.utilities.Utility.waitForElamentPresent(Utility.java:141)
at com.APIDemos.utilities.Utility.swiUPTillFindElement(Utility.java:127)
at com.APIDemos.Pages.TextSwitcherPage.do_tap_on_text_switcher(TextSwitcherPage.java:41)
at com.APIDemos.stepdefinations.TextSwitcherStepDef.user_tap_on_textswitcher_tap(TextSwitcherStepDef.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:85)
at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:129)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:129)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.APIDemos.Runner.Run@2b48a640]" started-at="2023-02-02T13:15:44 IST" name="tearDownClass" finished-at="2023-02-02T13:15:44 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.APIDemos.Runner.Run -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
